name: Build Application

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  # Enable manual triggering for testing
  workflow_dispatch:

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        include:
          - os: windows-latest
            output_name: subtitle_translator_windows
            asset_name: subtitle-translator-windows.zip
          - os: macos-latest
            output_name: subtitle_translator_macos
            asset_name: subtitle-translator-macos.zip
          - os: ubuntu-latest
            output_name: subtitle_translator_linux
            asset_name: subtitle-translator-linux.tar.gz

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[gui]"

    - name: Install testing and build dependencies
      run: |
        pip install pyinstaller pytest

    - name: Install Qt dependencies (Ubuntu only)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libegl1 libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xkb1

    - name: Run tests
      run: |
        pytest tests/ -v || echo "No tests found or tests failed"

    - name: Create PyInstaller spec file
      run: |
        echo "Creating PyInstaller spec file"
        python -c "
        import sys
        content = '''
        # -*- mode: python ; coding: utf-8 -*-

        block_cipher = None

        a = Analysis(
            ['subtitle_translator/gui/main.py'],
            pathex=[],
            binaries=[],
            datas=[],
            hiddenimports=[],
            hookspath=[],
            hooksconfig={},
            runtime_hooks=[],
            excludes=[],
            win_no_prefer_redirects=False,
            win_private_assemblies=False,
            cipher=block_cipher,
            noarchive=False,
        )
        pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)

        if sys.platform == 'darwin':
            exe = EXE(
                pyz,
                a.scripts,
                [],
                exclude_binaries=True,
                name='${{ matrix.output_name }}',
                debug=False,
                bootloader_ignore_signals=False,
                strip=False,
                upx=True,
                console=False,
            )
            coll = COLLECT(
                exe,
                a.binaries,
                a.zipfiles,
                a.datas,
                strip=False,
                upx=True,
                upx_exclude=[],
                name='${{ matrix.output_name }}',
            )
            app = APP(
                a.scripts,
                pyz,
                exe,
                coll,
                name='${{ matrix.output_name }}',
                icon=None,
                bundle_identifier=None,
            )
        else:
            exe = EXE(
                pyz,
                a.scripts,
                a.binaries,
                a.zipfiles,
                a.datas,
                [],
                name='${{ matrix.output_name }}',
                debug=False,
                bootloader_ignore_signals=False,
                strip=False,
                upx=True,
                upx_exclude=[],
                runtime_tmpdir=None,
                console=False,
                disable_windowed_traceback=False,
                argv_emulation=False,
                target_arch=None,
                codesign_identity=None,
                entitlements_file=None,
            )
        '''
        with open('subtitle_translator.spec', 'w') as f:
            f.write(content)
        "

    - name: Build with PyInstaller
      run: |
        pyinstaller subtitle_translator.spec

    - name: List build artifacts
      run: ls -R dist

    - name: Package Windows
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive -Path dist/${{ matrix.output_name }}.exe -DestinationPath ${{ matrix.asset_name }}

    - name: Package macOS
      if: matrix.os == 'macos-latest'
      run: |
        cd dist
        zip -r ../${{ matrix.asset_name }} ${{ matrix.output_name }}.app
        cd ..

    - name: Package Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        tar -czvf ${{ matrix.asset_name }} -C dist ${{ matrix.output_name }}

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: ${{ matrix.asset_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            windows-latest-build/subtitle-translator-windows.zip
            macos-latest-build/subtitle-translator-macos.zip
            ubuntu-latest-build/subtitle-translator-linux.tar.gz
          generate_release_notes: true
