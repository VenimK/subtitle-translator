name: Build macOS App

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags
  workflow_dispatch:  # Enable manual triggering for testing

jobs:
  build:
    name: Build macOS App
    runs-on: macos-latest
    env:
      APP_NAME: subtitle_translator_macos

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      id: setup-python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'

    - name: Install dependencies
      run: |
        ${{ steps.setup-python.outputs.python-path }} -m pip install --upgrade pip
        ${{ steps.setup-python.outputs.python-path }} -m pip install -e ".[gui]"
        ${{ steps.setup-python.outputs.python-path }} -m pip install pyinstaller

    - name: Create spec file
      run: |
        QT_PATH=$(${{ steps.setup-python.outputs.python-path }} -c 'import PyQt6; print(PyQt6.__path__[0])')
        
        # Create runtime hook for Qt initialization
        cat > qt_runtime_hook.py << EOL
        import os
        import sys
        
        if sys.platform == 'darwin':
            if getattr(sys, 'frozen', False):
                # Get the app bundle path
                bundle_dir = os.path.dirname(os.path.dirname(os.path.dirname(sys.executable)))
                os.environ['QT_PLUGIN_PATH'] = os.path.join(bundle_dir, 'Resources', 'PyQt6', 'Qt6', 'plugins')
                os.environ['QT_QPA_PLATFORM_PLUGIN_PATH'] = os.path.join(bundle_dir, 'Resources', 'PyQt6', 'Qt6', 'plugins', 'platforms')
        EOL
        
        cat > subtitle_translator.spec << EOL
        # -*- mode: python ; coding: utf-8 -*-
        import os
        import PyQt6
        
        block_cipher = None
        qt_path = '${QT_PATH}'
        
        a = Analysis(
            ['subtitle_translator/gui/main.py'],
            pathex=[],
            binaries=[],
            datas=[
                (qt_path, 'PyQt6'),
                (os.path.join(qt_path, 'Qt6', 'plugins'), os.path.join('PyQt6', 'Qt6', 'plugins')),
            ],
            hiddenimports=[
                'PyQt6.QtCore',
                'PyQt6.QtGui',
                'PyQt6.QtWidgets',
                'PyQt6.sip',
                'PyQt6.QtDBus',
            ],
            hookspath=[],
            hooksconfig={},
            runtime_hooks=['qt_runtime_hook.py'],
            excludes=[],
            win_no_prefer_redirects=False,
            win_private_assemblies=False,
            cipher=block_cipher,
            noarchive=False,
        )
        
        pyz = PYZ(a.pure, a.zipped_data, cipher=block_cipher)
        
        exe = EXE(
            pyz,
            a.scripts,
            [],
            exclude_binaries=True,
            name='${{ env.APP_NAME }}',
            debug=False,
            bootloader_ignore_signals=False,
            strip=False,
            upx=True,
            console=False,
            codesign_identity=None,
            entitlements_file=None,
        )
        
        coll = COLLECT(
            exe,
            a.binaries,
            a.zipfiles,
            a.datas,
            strip=False,
            upx=True,
            upx_exclude=[],
            name='${{ env.APP_NAME }}',
        )
        
        app = BUNDLE(
            coll,
            name='${{ env.APP_NAME }}.app',
            icon=None,
            bundle_identifier='com.subtitle-translator.app',
            info_plist={
                'NSHighResolutionCapable': True,
                'CFBundleShortVersionString': '1.0.0',
                'CFBundleVersion': '1.0.0',
            },
        )
        EOL

    - name: Build macOS app
      run: |
        ${{ steps.setup-python.outputs.python-path }} -m PyInstaller subtitle_translator.spec

    - name: Verify and package app
      run: |
        echo "Verifying app bundle structure..."
        ls -la dist/${{ env.APP_NAME }}.app/Contents/
        
        echo "\nVerifying Qt plugins in bundle..."
        find dist/${{ env.APP_NAME }}.app -name "*.dylib" -o -name "libqcocoa.dylib"
        
        echo "\nChecking Qt platform plugin..."
        ls -la dist/${{ env.APP_NAME }}.app/Contents/Resources/PyQt6/Qt6/plugins/platforms/
        
        echo "\nChecking Qt libraries..."
        ls -la dist/${{ env.APP_NAME }}.app/Contents/Frameworks/
        
        echo "\nChecking Info.plist..."
        cat dist/${{ env.APP_NAME }}.app/Contents/Info.plist
        
        echo "\nCreating zip archive..."
        cd dist
        zip -r ../subtitle-translator-macos.zip ${{ env.APP_NAME }}.app
        cd ..

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: subtitle-translator-macos.zip

    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: subtitle-translator-macos.zip
        generate_release_notes: true
